"use client";

import { useState, useEffect } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { Button } from "@/components/ui/button";
import { LucideMoveRight } from "lucide-react";

const carouselImages = [
  {
    id: 1,
    desktop: "/images/landing/f1desktop.svg",
    mobile: "/images/landing/f1mobile.svg",
    alt: "Nigerian Fashion Model 1",
  },
  {
    id: 2,
    desktop: "/images/landing/f2desktop.svg",
    mobile: "/images/landing/f2mobile.svg",
    alt: "Nigerian Fashion Model 2",
  },
  {
    id: 3,
    desktop: "/images/landing/f3desktop.svg",
    mobile: "/images/landing/f3mobile.svg",
    alt: "Nigerian Fashion Model 3",
  },
];

export function HeroCarousel() {
  const [currentIndex, setCurrentIndex] = useState(0);

  // Auto-slide every 5 seconds
  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentIndex((prevIndex) => (prevIndex + 1) % carouselImages.length);
    }, 5000);

    return () => clearInterval(interval);
  }, []);

  return (
    <section className="relative w-full bg-white pt-0">
      {/* Mobile Layout: White background with centered image */}
      <div className="md:hidden flex flex-col bg-white pb-24">
        {/* Text Content at Top */}
        <div className="relative h-full translate-y-20 mx-auto px-4 z-10 bg-white">
            <div className="space-y-3 flex-col items-center">
              
              <div className="flex justify-center">
                <svg width="298" height="66" viewBox="0 0 298 66" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M22.8512 52.5477C31.1604 52.5477 39.4695 49.243 39.4695 38.0592C39.4695 29.1255 34.7501 25.5386 28.2024 23.5707L17.0096 20.2661C13.9104 19.3526 12.7138 18.4392 12.7138 15.6247C12.7138 11.0502 15.9542 9.92881 21.3054 9.92881C24.4046 9.92881 31.4428 10.211 35.8798 10.7011L36.7271 2.74769C31.0266 1.69317 23.6985 0.920847 18.5629 0.920847C9.90444 0.920847 1.52841 3.66853 1.52841 16.2559C1.52841 23.7861 4.62762 27.0907 10.6774 28.8507L23.0668 32.3707C26.4484 33.2841 28.2098 34.762 28.2098 38.0666C28.2098 42.5669 24.8282 43.6214 19.9007 43.6214C16.1697 43.6214 9.05718 43.057 1.52841 42.0693L0.614258 50.0896C7.37751 51.2184 16.9501 52.5477 22.8661 52.5477H22.8512ZM254.838 33.4104L268.053 1.32929H278.264L266.053 31.3385C265.905 31.9103 266.083 32.1257 266.44 32.1405H279.231V19.4566L281.081 11.6145H289.651V32.1405H297.328V40.792H289.651V51.3446H279.298V40.792H261.735C255.403 40.9851 253.582 38.2077 254.831 33.403L254.838 33.4104ZM238.993 37.0715C238.993 34.4946 238.265 32.6901 236.808 31.6578C235.351 30.6256 233.099 30.0835 230.052 30.0389H222.449V21.6696H230.052C233.01 21.6696 235.076 21.2909 236.251 20.5408C237.425 19.7908 238.012 18.0085 238.012 15.194C238.012 12.8027 237.298 11.1838 235.864 10.3372C234.437 9.49066 232.118 9.0748 228.93 9.0748C224.991 9.0748 221.186 9.49809 217.521 10.3372V2.25013C222.635 1.21789 226.529 0.698061 229.205 0.698061C234.177 0.698061 238.005 1.12135 240.68 1.96051C243.311 2.71056 245.236 4.10668 246.455 6.14888C247.674 8.19108 248.357 11.2061 248.499 15.1865C248.499 20.0655 246.388 23.489 242.159 25.457C247.042 27.0981 249.48 30.9672 249.48 37.0641C249.48 41.9876 248.305 45.6933 245.957 48.1811C244.968 49.1688 243.564 49.9856 241.735 50.6391C238.874 51.5303 235.024 51.9758 230.186 51.9758C226.433 51.9758 221.713 51.3446 216.035 50.0747V41.9134C220.866 43.0422 225.496 43.5991 229.903 43.5991C232.951 43.5991 235.232 43.1164 236.734 42.1584C238.235 41.193 238.986 39.4999 238.986 37.0567L238.993 37.0715ZM204.144 26.2367L189.287 42.4852H209.844V51.3521H176.05V43.963L196.466 20.4666C197.544 19.2487 198.272 18.2164 198.651 17.3698C199.023 16.5233 199.216 15.543 199.216 14.4142C199.216 12.3943 198.525 11.013 197.143 10.263C195.76 9.51294 193.56 9.1342 190.558 9.1342C186.054 9.1342 181.684 9.81741 177.462 11.1764V2.87393C179.67 2.07933 182.063 1.51494 184.642 1.18819C187.131 0.861437 189.101 0.698061 190.558 0.698061C196.422 0.698061 200.933 1.47038 204.077 3.02246C207.644 4.76018 209.428 8.27277 209.428 13.5751C209.428 16.4861 209.049 18.7808 208.298 20.4666C207.503 22.2488 206.113 24.1722 204.144 26.2367ZM147.399 37.5616C147.823 39.8563 148.834 41.4901 150.424 42.4481C152.022 43.406 154.155 43.8887 156.831 43.8887C158.57 43.8887 160.339 43.8293 162.145 43.7105C163.951 43.5917 165.586 43.4135 167.035 43.1833C167.786 43.0422 168.165 43.3243 168.165 44.0298V49.0277C168.165 49.6812 167.838 50.1267 167.176 50.3644C165.392 50.8842 163.49 51.2704 161.476 51.5229C159.454 51.7828 157.507 51.909 155.634 51.909C152.252 51.909 149.384 51.508 147.013 50.7134C144.642 49.9188 142.709 48.7455 141.201 47.1934C139.699 45.6487 138.6 43.7551 137.893 41.5272C137.187 39.2994 136.838 36.7819 136.838 33.9674V31.7841C136.838 26.3927 138.272 22.1375 141.134 19.0185C143.995 15.8995 148.477 14.34 154.579 14.34C159.974 14.34 164.025 15.6915 166.723 18.3872C169.421 21.0829 170.773 24.7292 170.773 29.326C170.773 32.1405 169.815 34.2124 167.89 35.5491C165.965 36.8858 163.363 37.5542 160.078 37.5542H147.407L147.399 37.5616ZM154.296 22.3677C152.327 22.3677 150.692 22.9543 149.398 24.1277C148.105 25.301 147.347 27.3432 147.109 30.2468H158.161C158.956 30.2468 159.543 30.0463 159.922 29.6453C160.301 29.2443 160.487 28.717 160.487 28.0635C160.487 26.1921 159.997 24.7663 159.008 23.8083C158.02 22.8504 156.452 22.3677 154.289 22.3677H154.296ZM114.727 1.26245C114.727 0.415866 115.129 0 115.924 0H123.81C124.605 0 125.006 0.423292 125.006 1.26245V39.0394C125.006 40.6806 125.311 41.8985 125.92 42.7006C126.53 43.4952 127.771 43.8962 129.651 43.8962C130.164 43.8962 130.684 43.8739 131.197 43.8293C131.717 43.7848 132.23 43.7105 132.743 43.6214C133.494 43.4803 133.873 43.7848 133.873 44.5348V49.3915C133.873 50.0525 133.471 50.5203 132.676 50.8025C131.784 51.1293 130.707 51.404 129.436 51.612C128.165 51.8199 126.998 51.9313 125.913 51.9313C121.877 51.9313 119.001 50.8545 117.284 48.6935C115.567 46.5325 114.713 43.6957 114.713 40.1831V1.2773L114.727 1.26245ZM82.6206 65.2093C87.9048 65.2093 92.3344 62.8181 95.0843 54.7235L108.603 16.1742H97.693L89.7406 42.8342L82.1375 16.1742H71.2271L82.7692 50.5055H87.4886L86.7157 52.7556C85.3779 56.4167 83.6908 57.6123 80.0268 57.6123C78.9714 57.6123 77.7005 57.6123 74.958 57.2633L74.1108 63.9469C77.2769 64.7192 80.0937 65.2167 82.628 65.2167L82.6206 65.2093ZM60.3762 52.5477C63.4754 52.5477 67.132 52.0575 69.4582 51.6342L68.8265 45.1586C66.857 45.2997 64.7463 45.3666 63.0517 45.3666C60.235 45.3666 58.1242 44.2378 58.1242 40.0197V23.838H67.4144V16.1668H58.0499V6.46078L47.6969 6.4385V16.4267L41.4985 16.7757V23.8306H47.6969V40.9925C47.6969 50.2827 53.821 52.5328 60.3687 52.5328L60.3762 52.5477Z" fill="#029338"/>
                </svg>
              </div>

              <p className="text-lg text-[#595959] font-medium font-ubuntu text-center">Fashion | Beauty Products | Accessories</p>

              <div className="flex gap-5 justify-center item-center">
                <Button size="lg" variant="outline" className="text-base py-6 space-x-3 px-8 rounded-full border-2 border-[#029338] text-[#029338] hover:bg-green-50">
                  <p className="text-base font-medium">Register</p>
                  <LucideMoveRight size={20}/>
                </Button>

                {/* Carousel Indicators */}
                <div className="flex items-center gap-2 pt-2">
                  {carouselImages.map((_, index) => (
                    <button
                      key={index}
                      onClick={() => setCurrentIndex(index)}
                      className={`h-2 rounded-full transition-all duration-300 ${
                        index === currentIndex 
                          ? "w-8 bg-[#029338]" 
                          : "w-2 bg-gray-400 hover:bg-gray-500"
                      }`}
                      aria-label={`Go to slide ${index + 1}`}
                    />
                  ))}
                </div>
              </div>
            </div>
        </div>

        {/* Centered Image Below */}
        <div className="flex-1 flex items-start -translate-y-10 w-full pb-4 pt-2 z-[0]">
          <div className="w-full">
            <div className="relative w-full aspect-[3/4] ">
              <AnimatePresence mode="wait">
                <motion.img
                  key={currentIndex}
                  src={carouselImages[currentIndex].mobile}
                  alt={carouselImages[currentIndex].alt}
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  exit={{ opacity: 0 }}
                  transition={{ duration: 0.8, ease: "easeInOut" }}
                  className="absolute inset-0 w-full h-full object-cover"
                />
              </AnimatePresence>
            </div>
          </div>
        </div>
      </div>

      {/* Desktop Layout: Full-screen background with text overlay on left */}
      <div className="hidden md:block relative w-full overflow-hidden" style={{ height: 'calc(100vh - 72px)', maxHeight: 'calc(110vh - 72px)' }}>
        {/* Background Image Carousel */}
        <AnimatePresence mode="wait">
          <motion.div
            key={currentIndex}
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            transition={{ 
              duration: 1,
              ease: "easeInOut"
            }}
            className="absolute inset-0"
          >
            {/* Uncomment when you have desktop images */}
            <img
              src={carouselImages[currentIndex].desktop}
              alt={carouselImages[currentIndex].alt}
              className="w-full h-full object-cover"
            />
            
            {/* Overlay gradient for better text readability */}
            <div className="absolute inset-0 bg-gradient-to-r from-white/90 via-transparent to-transparent" />
          </motion.div>
        </AnimatePresence>

        {/* Text Content Overlay on Left */}
        <div className="relative h-full container mx-auto px-4 pl-10">
          <div className="h-full flex items-center">
            <div className="w-1/2 space-y-3">
              
              <h1 className="text-4xl lg:text-5xl xl:text-6xl font-bold tracking-tight text-gray-900">
                <svg width="610" height="134" viewBox="0 0 610 134" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M45.6901 107.969C62.7628 107.969 79.8354 101.179 79.8354 78.1997C79.8354 59.8438 70.1385 52.4739 56.685 48.4304L33.6873 41.6404C27.3194 39.7636 24.8608 37.8868 24.8608 32.1039C24.8608 22.7046 31.5188 20.4006 42.5137 20.4006C48.8816 20.4006 63.343 20.9804 72.4597 21.9875L74.2005 5.64564C62.4879 3.47893 47.4309 1.89205 36.8788 1.89205C19.0884 1.89205 1.8783 7.53769 1.8783 33.4008C1.8783 48.8729 8.2462 55.6629 20.6766 59.2792L46.1329 66.5117C53.0811 68.3885 56.7003 71.425 56.7003 78.215C56.7003 87.4616 49.7521 89.6283 39.6276 89.6283C31.9617 89.6283 17.3476 88.4687 1.8783 86.4393L0 102.918C13.8964 105.238 33.5651 107.969 45.7206 107.969H45.6901ZM522.351 68.6479L549.502 2.73127H570.484L545.395 64.3908C545.089 65.5657 545.456 66.0082 546.189 66.0387H572.47V39.9772L576.272 23.8643H593.879V66.0387H609.654V83.8148H593.879V105.497H572.607V83.8148H536.522C523.512 84.2116 519.77 78.5049 522.336 68.6327L522.351 68.6479ZM489.794 76.1703C489.794 70.8757 488.297 67.1678 485.304 65.0469C482.311 62.926 477.684 61.8121 471.423 61.7206H455.801V44.5243H471.423C477.501 44.5243 481.746 43.7461 484.159 42.205C486.572 40.6639 487.778 37.0018 487.778 31.2189C487.778 26.3056 486.312 22.9793 483.365 21.2398C480.433 19.5003 475.668 18.6459 469.117 18.6459C461.024 18.6459 453.205 19.5156 445.677 21.2398V4.62332C456.183 2.50239 464.185 1.4343 469.682 1.4343C479.898 1.4343 487.763 2.30403 493.26 4.02824C498.666 5.56935 502.621 8.43794 505.126 12.634C507.63 16.8301 509.035 23.0251 509.325 31.2036C509.325 41.2284 504.988 48.2626 496.299 52.3061C506.332 55.6782 511.341 63.6279 511.341 76.1551C511.341 86.2715 508.928 93.8854 504.103 98.997C502.071 101.026 499.185 102.705 495.429 104.048C489.549 105.879 481.639 106.794 471.698 106.794C463.986 106.794 454.289 105.497 442.622 102.888V86.1189C452.548 88.4382 462.062 89.5826 471.118 89.5826C477.379 89.5826 482.067 88.5908 485.151 86.6224C488.236 84.6388 489.779 81.1599 489.779 76.1398L489.794 76.1703ZM418.189 53.9082L387.663 87.2938H429.902V105.512H360.466V90.3302L402.415 42.0524C404.629 39.55 406.125 37.4291 406.904 35.6896C407.668 33.9501 408.065 31.936 408.065 29.6167C408.065 25.4664 406.645 22.6283 403.804 21.0872C400.964 19.5461 396.444 18.7679 390.274 18.7679C381.02 18.7679 372.041 20.1717 363.367 22.964V5.90503C367.903 4.27238 372.82 3.11273 378.119 2.44136C383.235 1.76998 387.281 1.4343 390.274 1.4343C402.323 1.4343 411.592 3.02118 418.052 6.2102C425.382 9.78069 429.047 16.998 429.047 27.8925C429.047 33.8738 428.268 38.5887 426.726 42.0524C425.092 45.7144 422.236 49.6664 418.189 53.9082ZM301.597 77.1774C302.468 81.8923 304.544 85.2491 307.812 87.2175C311.096 89.1858 315.478 90.1776 320.976 90.1776C324.549 90.1776 328.184 90.0556 331.894 89.8114C335.605 89.5673 338.965 89.2011 341.942 88.7281C343.485 88.4382 344.264 89.018 344.264 90.4676V100.737C344.264 102.079 343.592 102.995 342.233 103.483C338.568 104.551 334.658 105.345 330.52 105.863C326.366 106.397 322.365 106.657 318.517 106.657C311.569 106.657 305.674 105.833 300.803 104.2C295.932 102.568 291.961 100.157 288.861 96.9677C285.777 93.7939 283.517 89.903 282.066 85.3254C280.615 80.7479 279.897 75.5753 279.897 69.7923V65.3063C279.897 54.2286 282.845 45.4855 288.724 39.077C294.603 32.6684 303.811 29.4641 316.349 29.4641C327.435 29.4641 335.758 32.2412 341.301 37.78C346.844 43.3188 349.624 50.8108 349.624 60.2558C349.624 66.0387 347.654 70.2958 343.699 73.0424C339.743 75.7889 334.399 77.1622 327.649 77.1622H301.612L301.597 77.1774ZM315.768 45.9586C311.722 45.9586 308.362 47.164 305.705 49.5748C303.048 51.9857 301.49 56.1817 301.002 62.1478H323.709C325.343 62.1478 326.55 61.7358 327.328 60.9119C328.107 60.0879 328.489 59.0046 328.489 57.6618C328.489 53.8167 327.481 50.887 325.45 48.9187C323.419 46.9504 320.197 45.9586 315.753 45.9586H315.768ZM234.467 2.59394C234.467 0.854475 235.292 0 236.926 0H253.128C254.762 0 255.586 0.869734 255.586 2.59394V80.2139C255.586 83.586 256.212 86.0884 257.465 87.7363C258.717 89.3689 261.267 90.1929 265.131 90.1929C266.184 90.1929 267.253 90.1471 268.307 90.0556C269.376 89.964 270.43 89.8114 271.483 89.6283C273.026 89.3384 273.804 89.964 273.804 91.5051V101.484C273.804 102.842 272.98 103.803 271.346 104.383C269.513 105.055 267.299 105.619 264.688 106.046C262.076 106.474 259.679 106.703 257.449 106.703C249.157 106.703 243.248 104.49 239.72 100.05C236.193 95.6097 234.436 89.7809 234.436 82.5637V2.62446L234.467 2.59394ZM168.497 133.985C179.355 133.985 188.456 129.072 194.106 112.44L221.884 33.233H199.466L183.127 88.0109L167.505 33.233H145.087L168.803 103.773H178.5L176.912 108.396C174.163 115.919 170.696 118.375 163.168 118.375C160.999 118.375 158.388 118.375 152.753 117.658L151.012 131.391C157.518 132.978 163.305 134 168.513 134L168.497 133.985ZM122.792 107.969C129.16 107.969 136.673 106.962 141.453 106.092L140.155 92.7868C136.108 93.0768 131.771 93.2141 128.29 93.2141C122.502 93.2141 118.165 90.8948 118.165 82.228V48.9797H137.253V33.2177H118.012V13.2749L96.7402 13.2291V33.7518L84.0043 34.4689V48.9645H96.7402V84.2268C96.7402 103.315 109.323 107.939 122.777 107.939L122.792 107.969Z" fill="#029338"/>
                </svg>
              </h1>

              <p className="text-lg text-[#595959] font-medium font-[30.28px] font-ubuntu">Fashion | Beauty Products | Accessories</p>

              <div className="flex gap-5 item-center">
                <Button size="lg" variant="outline" className="text-base space-x-3 px-8 rounded-full border-2 border-[#029338] text-[#029338] hover:bg-green-50">
                  <p className="text-base font-medium">Register</p>
                  <LucideMoveRight size={20}/>
                </Button>

                {/* Carousel Indicators */}
                <div className="flex items-center gap-2 pt-2">
                  {carouselImages.map((_, index) => (
                    <button
                      key={index}
                      onClick={() => setCurrentIndex(index)}
                      className={`h-2 rounded-full transition-all duration-300 ${
                        index === currentIndex 
                          ? "w-8 bg-[#029338]" 
                          : "w-2 bg-gray-400 hover:bg-gray-500"
                      }`}
                      aria-label={`Go to slide ${index + 1}`}
                    />
                  ))}
                </div>
              </div>

            </div>
          </div>
        </div>
      </div>

    </section>
  );
}
